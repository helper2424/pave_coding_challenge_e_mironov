type Query {
  account(input: AccountsInput!): Account
}

type Mutation {
  createAccount(input: CreateAccountInput!): MutationResult!
  authorize(input: AuthorizeInput!): MutationResult
  present(input: PresentInput!): MutationResult
}

type MutationResult {
  status: Int!
}

type Account {
  id: ID!
  credits: String!
}

input AuthorizeInput {
  accountId: ID!
  amount: Int!
}

input PresentInput {
  accountId: ID!
  amount: Int!
}

input AccountsInput {
  accountId: ID!
}

input CreateAccountInput {
  id: ID!
  initialAmount: Int!
}
